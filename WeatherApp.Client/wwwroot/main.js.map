{"version":3,"sources":["./src/app/weather-card/weathercard.ts","./src/app/weather-image.service.ts","./src/environments/environment.ts","./src/app/weather-table/weather-table.component.ts","./src/app/weather-table/weather-table.component.html","./src/app/weather-data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/location.service.ts","./src/app/app.module.ts","./src/app/weather-card/weather-card.component.ts","./src/app/weather-card/weather-card.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class WeatherCard {\r\n\r\n  constructor(\r\n    dayOfWeek: string,\r\n    temperature: number,\r\n    iconShortHand: string,\r\n    isCurrentDayOfWeek: boolean\r\n    )\r\n  {\r\n    this.dayOfWeek = dayOfWeek;\r\n    this.temperature = temperature;\r\n    this.iconShortHand = iconShortHand;\r\n    this.isCurrentDayOfWeek = isCurrentDayOfWeek;\r\n  }\r\n\r\n  dayOfWeek: string;\r\n  temperature: number;\r\n  iconShortHand: string;\r\n  isCurrentDayOfWeek: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherImageService {\n\n  constructor() { }\n  getWeatherImageUrl(iconShortHand: string): string {\n    return \"https://www.metaweather.com/static/img/weather/png/\"\r\n      + iconShortHand\r\n      + \".png\";\r\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { WeatherCard } from '../weather-card/weathercard';\r\nimport { WeatherDataService } from '../weather-data.service';\r\n\n@Component({\n  selector: 'app-weather-table',\n  templateUrl: './weather-table.component.html',\n  styleUrls: ['./weather-table.component.scss']\n})\nexport class WeatherTableComponent implements OnInit {\n\n  constructor(private weatherDataService: WeatherDataService) {\n    this.weatherCards = new Array(0);\n    this.region = \"NAN\";\n    this.fromDate = new Date();\n    this.toDate = new Date();\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  weatherCards: Array<WeatherCard>;\n  @Input() region: string;\n  @Input() fromDate: Date;\n  @Input() toDate: Date;\n}\n","  <div class=\"row\">\r\n    <div class=\"col\" *ngFor=\"let weatherCardItem of weatherCards\">\r\n      <app-weather-card></app-weather-card>\r\n    </div>\r\n  </div>\r\n","import { Injectable } from '@angular/core';\nimport { WeatherData } from './weather-data';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n\n  constructor(private httpClient: HttpClient) { }\n  getWeatherData(\n    region: string,\n    fromDate: Date,\n    toDate: Date): Promise<Array<WeatherData>> {\n    const fromDateParameter = fromDate.toISOString();\n    const toDateParameter = toDate.toISOString();\n\n    const params = new HttpParams({ fromObject:\n      { region, fromDateParameter, toDateParameter } });\n\n    this.httpClient.get(\n      \"http://www.google.com\",\n      { params } );\n\n    return new Promise((resolve: Function) =>  resolve(Array(5)));\r\n  }\n}\n","import { Input, Component, ElementRef } from '@angular/core';\r\nimport { LocationService } from './location.service';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Weather App';\n\n  constructor(\n    private eltRef: ElementRef,\n    private locationService: LocationService) {\n    let nativeElement = eltRef.nativeElement;\r\n\r\n    this.baseApiUrl = nativeElement.getAttribute('baseapiurl');\r\n    this.query = nativeElement.getAttribute('query');\r\n  }\n \n  ngOnInit(): void {\n    const result = this.locationService.getLocation(\n      this.baseApiUrl,\n      this.query);\n\n    result.then(a => { console.log(a); });\n  }\n\n  baseApiUrl: string;\n  query: string;\n}\n","<div class=\"container\">\r\n  <h1>Weather forecast for Belfast</h1>\r\n  <app-weather-table></app-weather-table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { LocationResponse } from './location-response';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor(private httpService: HttpClient) {\n    \n  }\n\n  getLocation(baseUrl: string, query: string): Promise<LocationResponse> {\n    \r\n    const params = new HttpParams({ fromObject: { query } });\r\n\r\n    const response = this.httpService.get<LocationResponse>(baseUrl + this.getLocationUrl, { params} );\r\n\r\n    return response.toPromise();\r\n  }\n\n  private getLocationUrl = \"location\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { WeatherTableComponent } from './weather-table/weather-table.component';\nimport { WeatherCardComponent } from './weather-card/weather-card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherTableComponent,\n    WeatherCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Input, Component, OnInit } from '@angular/core';\nimport { WeatherImageService } from '../weather-image.service';\r\nimport { WeatherCard } from './weathercard';\r\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss']\n})\nexport class WeatherCardComponent implements OnInit {\n\n  constructor(private weatherImageService: WeatherImageService) {\n    this.model = new WeatherCard(\"NAN\", 0, \"sn\", false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  getWeatherImage(): string {\n    return this.weatherImageService.getWeatherImageUrl(this.model.iconShortHand);\r\n  }\n\n  @Input() model: WeatherCard\n}\n","<div class=\"card weather-card\">\r\n  <div class=\"card-header\">\r\n    {{ model.dayOfWeek }}\r\n  </div>\r\n  <img [src]=\"getWeatherImage()\" class=\"card-img-top\" alt=\"...\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title  text-center\">{{model.temperature}} &deg;C</h5>\r\n  </div>\r\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}